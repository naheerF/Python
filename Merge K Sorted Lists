import heapq
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:
        heap = []
        for idx, linked_list in enumerate(lists):
            if linked_list: 
                heapq.heappush(heap, (linked_list.val, idx, linked_list))
        dummy = ListNode(0)
        current = dummy
        
        while heap:
            value, idx, node = heapq.heappop(heap)
            current.next = node
            current = current.next
            
            if node.next:
                heapq.heappush(heap, (node.next.val, idx, node.next))
        return dummy.next
