# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if(head is None):
            return
        strt=head
        c=0
        while(strt):
            c+=1
            last=strt
            strt=strt.next
        strt=head
        z=k%c
        if(z==0):
            return head
        while(c>z ):
            c-=1
            prev=strt
            strt=strt.next  
        last.next=head
        prev.next=None
        return strt
        
