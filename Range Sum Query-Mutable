class NumArray:

    def __init__(self, nums: List[int]):
        self.n = len(nums)
        self.tree = [0] * (2 * self.n)
        for i in range(self.n):
            self.tree[i + self.n] = nums[i]
        for i in range(self.n - 1, 0, -1):
            self.tree[i] = self.tree[2 * i] + self.tree[2 * i + 1]

    def update(self, index: int, val: int) -> None:
        pos = index + self.n  
        self.tree[pos] = val
        while pos > 1:
            pos //= 2
            self.tree[pos] = self.tree[2 * pos] + self.tree[2 * pos + 1]

    def sumRange(self, left: int, right: int) -> int:
        l, r = left + self.n, right + self.n
        total_sum = 0
        while l <= r:
            if l % 2 == 1:
                total_sum += self.tree[l]
                l += 1
            if r % 2 == 0:
                total_sum += self.tree[r]
                r -= 1
            l //= 2
            r //= 2
        return total_sum
